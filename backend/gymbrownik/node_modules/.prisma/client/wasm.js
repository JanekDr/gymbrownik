
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name'
};

exports.Prisma.TrainingWeekScalarFieldEnum = {
  id: 'id',
  name: 'name',
  workoutType: 'workoutType',
  restDays: 'restDays',
  trainingDays: 'trainingDays',
  userId: 'userId'
};

exports.Prisma.TrainingDayScalarFieldEnum = {
  id: 'id',
  dayOfWeek: 'dayOfWeek',
  trainingWeekId: 'trainingWeekId',
  workoutId: 'workoutId'
};

exports.Prisma.WorkoutScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ExerciseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  series: 'series',
  reps: 'reps',
  weight: 'weight',
  rest: 'rest',
  workoutId: 'workoutId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.AuthRole = exports.$Enums.AuthRole = {
  ADMIN: 'ADMIN',
  USER: 'USER'
};

exports.WorkoutType = exports.$Enums.WorkoutType = {
  PUSH_PULL_LEGS: 'PUSH_PULL_LEGS',
  UPPER_LOWER: 'UPPER_LOWER',
  FBW: 'FBW',
  SPLIT: 'SPLIT',
  CUSTOM: 'CUSTOM'
};

exports.Prisma.ModelName = {
  User: 'User',
  TrainingWeek: 'TrainingWeek',
  TrainingDay: 'TrainingDay',
  Workout: 'Workout',
  Exercise: 'Exercise'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\domin\\Desktop\\Projects\\gymbrownik\\backend\\gymbrownik\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\domin\\Desktop\\Projects\\gymbrownik\\backend\\gymbrownik\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum AuthRole {\n  ADMIN\n  USER\n}\n\nenum WorkoutType {\n  PUSH_PULL_LEGS\n  UPPER_LOWER\n  FBW\n  SPLIT\n  CUSTOM\n}\n\nmodel User {\n  id            Int            @id @default(autoincrement())\n  email         String         @unique\n  name          String\n  trainingWeeks TrainingWeek[]\n}\n\nmodel TrainingWeek {\n  id           Int         @id @default(autoincrement())\n  name         String\n  workoutType  WorkoutType\n  restDays     Int\n  trainingDays Int\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id])\n\n  days TrainingDay[]\n}\n\nmodel TrainingDay {\n  id        Int @id @default(autoincrement())\n  dayOfWeek Int // 1 = Monday, 7 = Sunday (albo enum z nazwami)\n\n  trainingWeekId Int\n  trainingWeek   TrainingWeek @relation(fields: [trainingWeekId], references: [id])\n\n  workoutId Int\n  workout   Workout @relation(fields: [workoutId], references: [id])\n}\n\nmodel Workout {\n  id        Int           @id @default(autoincrement())\n  name      String\n  exercises Exercise[]\n  days      TrainingDay[]\n}\n\nmodel Exercise {\n  id     Int     @id @default(autoincrement())\n  name   String\n  series Int\n  reps   Int\n  weight Decimal @db.Decimal(5, 2)\n  rest   Int? // seconds\n\n  workoutId Int\n  workout   Workout @relation(fields: [workoutId], references: [id])\n}\n",
  "inlineSchemaHash": "b01fa64114da6e6b84cdd07ce1ecc704bf033297abbc128bcf0989d28649c41b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trainingWeeks\",\"kind\":\"object\",\"type\":\"TrainingWeek\",\"relationName\":\"TrainingWeekToUser\"}],\"dbName\":null},\"TrainingWeek\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workoutType\",\"kind\":\"enum\",\"type\":\"WorkoutType\"},{\"name\":\"restDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trainingDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TrainingWeekToUser\"},{\"name\":\"days\",\"kind\":\"object\",\"type\":\"TrainingDay\",\"relationName\":\"TrainingDayToTrainingWeek\"}],\"dbName\":null},\"TrainingDay\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dayOfWeek\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trainingWeekId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trainingWeek\",\"kind\":\"object\",\"type\":\"TrainingWeek\",\"relationName\":\"TrainingDayToTrainingWeek\"},{\"name\":\"workoutId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workout\",\"kind\":\"object\",\"type\":\"Workout\",\"relationName\":\"TrainingDayToWorkout\"}],\"dbName\":null},\"Workout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exercises\",\"kind\":\"object\",\"type\":\"Exercise\",\"relationName\":\"ExerciseToWorkout\"},{\"name\":\"days\",\"kind\":\"object\",\"type\":\"TrainingDay\",\"relationName\":\"TrainingDayToWorkout\"}],\"dbName\":null},\"Exercise\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"series\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reps\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"rest\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workoutId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workout\",\"kind\":\"object\",\"type\":\"Workout\",\"relationName\":\"ExerciseToWorkout\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

